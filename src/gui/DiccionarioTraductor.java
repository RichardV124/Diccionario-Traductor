/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import modelo.Diccionario;
import modelo.Palabra;
import modelo.Traductor;
import modelo.Usuario;

/**
 *
 * @author Richard Vanegas - Andres Ciro
 */
public class DiccionarioTraductor extends javax.swing.JFrame {

    private Traductor traductor;
    private Usuario usuarioLogeado;

    /**
     * Creates new form DiccionarioTraductor
     */
    public DiccionarioTraductor(Traductor miTraductor, Usuario usu) {
        traductor = miTraductor;
        usuarioLogeado = usu;

        initComponents();
        jLUsuarioConectado.setText(usu.getNombre());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TipoTraduccion = new javax.swing.ButtonGroup();
        TipoTraduccionReg = new javax.swing.ButtonGroup();
        jTBPrincipal = new javax.swing.JTabbedPane();
        jPAgregarDiccionario = new javax.swing.JPanel();
        jPDatosDiccionario = new javax.swing.JPanel();
        jLIdiomaOrigenDiccionario = new javax.swing.JLabel();
        jTFIdiomaOrigenDiccionario = new javax.swing.JTextField();
        jLIdiomaDestinoDiccionario = new javax.swing.JLabel();
        jTFIdiomaDestinoDiccionario = new javax.swing.JTextField();
        jBCrearDiccionario = new javax.swing.JButton();
        jPAgregarPalabra = new javax.swing.JPanel();
        jPInformacionPalabra = new javax.swing.JPanel();
        jLNombrePalabra = new javax.swing.JLabel();
        jLTraduccion = new javax.swing.JLabel();
        jLSignificadoOrigen = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTASignificadoOrigen = new javax.swing.JTextArea();
        jLSignificadoDestino = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTASignificadoDestino = new javax.swing.JTextArea();
        jTFNombrePalabra = new javax.swing.JTextField();
        jTFTraduccion = new javax.swing.JTextField();
        jBAgregarPalabra = new javax.swing.JButton();
        jPTipoTraduccionReg = new javax.swing.JPanel();
        jTFTraduAlternaReg = new javax.swing.JTextField();
        jLTraduAlternaRegistrar = new javax.swing.JLabel();
        jRBTraduAlternaReg = new javax.swing.JRadioButton();
        jPDiccionarioAgregar = new javax.swing.JPanel();
        jLDiccionarioPalabra = new javax.swing.JLabel();
        jCBDiccionario = new javax.swing.JComboBox<>();
        jPVerPalabras = new javax.swing.JPanel();
        jPVerDatos = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaDiccionario = new javax.swing.JList();
        jLTraduccionVer = new javax.swing.JLabel();
        jLSignificadoVer = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTASignificadoVer = new javax.swing.JTextArea();
        jTFAutorVer = new javax.swing.JTextField();
        jLAutorVer = new javax.swing.JLabel();
        jBQuitarFiltro = new javax.swing.JButton();
        jBAplicarFiltro = new javax.swing.JButton();
        jLInstruccionFiltro = new javax.swing.JLabel();
        jTFFiltro = new javax.swing.JTextField();
        jLFiltro = new javax.swing.JLabel();
        jTFTraduccionVer = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListTraduAlternas = new javax.swing.JList<>();
        jPDiccionarioVer = new javax.swing.JPanel();
        jLDiccionarioPalabraVer = new javax.swing.JLabel();
        jCBDiccionarioVer = new javax.swing.JComboBox<>();
        jBValidarDiccionarioVer = new javax.swing.JButton();
        jPModificarPalabra = new javax.swing.JPanel();
        jPDiccionarioModificar = new javax.swing.JPanel();
        jLDiccionarioPalabraModificar = new javax.swing.JLabel();
        jCBDiccionarioModificar = new javax.swing.JComboBox<>();
        jBValidarModificacion = new javax.swing.JButton();
        jPDatosModificar = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jListPalabrasModificar = new javax.swing.JList<>();
        jLTraduccionModificar = new javax.swing.JLabel();
        jTFTraduccionModificar = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTASignificadoOrigenModificar = new javax.swing.JTextArea();
        jLSignificadoOrigenModificar = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTASignificadoDestinoModificar = new javax.swing.JTextArea();
        jLSignificadoDestinoModificar = new javax.swing.JLabel();
        jBModificarPalabra = new javax.swing.JButton();
        jPTipoTraduccion = new javax.swing.JPanel();
        jRBTraduccionAlterna = new javax.swing.JRadioButton();
        jRBTraduccionPrincipal = new javax.swing.JRadioButton();
        jPOtrasOpciones = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jListPalabrasRecientes = new javax.swing.JList<>();
        jPArchivosDeTexto = new javax.swing.JPanel();
        jPGenerarDiccionarios = new javax.swing.JPanel();
        jBGenerarPorDiccionario = new javax.swing.JButton();
        jPGenerarAutor = new javax.swing.JPanel();
        jBGenerarPorAutor = new javax.swing.JButton();
        jPGenerarInicial = new javax.swing.JPanel();
        jBGenerarPorInicial = new javax.swing.JButton();
        jLEncabezado = new javax.swing.JLabel();
        jLTitulo = new javax.swing.JLabel();
        jLEslogan = new javax.swing.JLabel();
        jBCerrarSesion = new javax.swing.JButton();
        jLInfoConexion = new javax.swing.JLabel();
        jLUsuarioConectado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTBPrincipal.setBackground(new java.awt.Color(102, 204, 255));
        jTBPrincipal.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        jTBPrincipal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTBPrincipalStateChanged(evt);
            }
        });

        jPAgregarDiccionario.setBackground(new java.awt.Color(51, 204, 255));

        jPDatosDiccionario.setBackground(new java.awt.Color(51, 153, 255));
        jPDatosDiccionario.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del diccionario"));

        jLIdiomaOrigenDiccionario.setText("Idioma origen:");

        jLIdiomaDestinoDiccionario.setText("Idioma destino:");

        jBCrearDiccionario.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        jBCrearDiccionario.setForeground(new java.awt.Color(51, 153, 255));
        jBCrearDiccionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/imagenes/save2.png"))); // NOI18N
        jBCrearDiccionario.setText("CREAR DICCIONARIO");
        jBCrearDiccionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCrearDiccionarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPDatosDiccionarioLayout = new javax.swing.GroupLayout(jPDatosDiccionario);
        jPDatosDiccionario.setLayout(jPDatosDiccionarioLayout);
        jPDatosDiccionarioLayout.setHorizontalGroup(
            jPDatosDiccionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDatosDiccionarioLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPDatosDiccionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLIdiomaOrigenDiccionario)
                    .addComponent(jLIdiomaDestinoDiccionario))
                .addGap(51, 51, 51)
                .addGroup(jPDatosDiccionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBCrearDiccionario)
                    .addGroup(jPDatosDiccionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTFIdiomaOrigenDiccionario)
                        .addComponent(jTFIdiomaDestinoDiccionario, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPDatosDiccionarioLayout.setVerticalGroup(
            jPDatosDiccionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDatosDiccionarioLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPDatosDiccionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLIdiomaOrigenDiccionario)
                    .addComponent(jTFIdiomaOrigenDiccionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPDatosDiccionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLIdiomaDestinoDiccionario)
                    .addComponent(jTFIdiomaDestinoDiccionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(jBCrearDiccionario)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPAgregarDiccionarioLayout = new javax.swing.GroupLayout(jPAgregarDiccionario);
        jPAgregarDiccionario.setLayout(jPAgregarDiccionarioLayout);
        jPAgregarDiccionarioLayout.setHorizontalGroup(
            jPAgregarDiccionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPAgregarDiccionarioLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jPDatosDiccionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(124, Short.MAX_VALUE))
        );
        jPAgregarDiccionarioLayout.setVerticalGroup(
            jPAgregarDiccionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPAgregarDiccionarioLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPDatosDiccionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(438, Short.MAX_VALUE))
        );

        jTBPrincipal.addTab("Agregar diccionario", jPAgregarDiccionario);

        jPAgregarPalabra.setBackground(new java.awt.Color(51, 204, 255));

        jPInformacionPalabra.setBackground(new java.awt.Color(51, 153, 255));
        jPInformacionPalabra.setBorder(javax.swing.BorderFactory.createTitledBorder("Informacion de la palabra"));

        jLNombrePalabra.setText("Nombre:");

        jLTraduccion.setText("Traduccion:");

        jLSignificadoOrigen.setText("Significado idioma origen:");

        jTASignificadoOrigen.setColumns(20);
        jTASignificadoOrigen.setRows(5);
        jScrollPane1.setViewportView(jTASignificadoOrigen);

        jLSignificadoDestino.setText("Significado idioma destino:");

        jTASignificadoDestino.setColumns(20);
        jTASignificadoDestino.setRows(5);
        jScrollPane2.setViewportView(jTASignificadoDestino);

        jBAgregarPalabra.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        jBAgregarPalabra.setForeground(new java.awt.Color(51, 153, 255));
        jBAgregarPalabra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/imagenes/save.png"))); // NOI18N
        jBAgregarPalabra.setText("AGREGAR PALABRA");
        jBAgregarPalabra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarPalabraActionPerformed(evt);
            }
        });

        jPTipoTraduccionReg.setBackground(new java.awt.Color(51, 102, 255));
        jPTipoTraduccionReg.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Añadir traduccion alterna", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        jLTraduAlternaRegistrar.setText("Traduccion alterna:");

        jRBTraduAlternaReg.setBackground(new java.awt.Color(51, 102, 255));
        TipoTraduccionReg.add(jRBTraduAlternaReg);
        jRBTraduAlternaReg.setText("Traduccion alterna");

        javax.swing.GroupLayout jPTipoTraduccionRegLayout = new javax.swing.GroupLayout(jPTipoTraduccionReg);
        jPTipoTraduccionReg.setLayout(jPTipoTraduccionRegLayout);
        jPTipoTraduccionRegLayout.setHorizontalGroup(
            jPTipoTraduccionRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPTipoTraduccionRegLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLTraduAlternaRegistrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jTFTraduAlternaReg, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(jPTipoTraduccionRegLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jRBTraduAlternaReg)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPTipoTraduccionRegLayout.setVerticalGroup(
            jPTipoTraduccionRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPTipoTraduccionRegLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRBTraduAlternaReg)
                .addGap(18, 18, 18)
                .addGroup(jPTipoTraduccionRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLTraduAlternaRegistrar)
                    .addComponent(jTFTraduAlternaReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPInformacionPalabraLayout = new javax.swing.GroupLayout(jPInformacionPalabra);
        jPInformacionPalabra.setLayout(jPInformacionPalabraLayout);
        jPInformacionPalabraLayout.setHorizontalGroup(
            jPInformacionPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInformacionPalabraLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPInformacionPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPInformacionPalabraLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jPTipoTraduccionReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPInformacionPalabraLayout.createSequentialGroup()
                        .addGroup(jPInformacionPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLNombrePalabra)
                            .addComponent(jLTraduccion)
                            .addComponent(jLSignificadoOrigen))
                        .addGap(23, 23, 23)
                        .addGroup(jPInformacionPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFTraduccion, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFNombrePalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPInformacionPalabraLayout.createSequentialGroup()
                        .addComponent(jLSignificadoDestino)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPInformacionPalabraLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBAgregarPalabra)
                .addGap(135, 135, 135))
        );
        jPInformacionPalabraLayout.setVerticalGroup(
            jPInformacionPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInformacionPalabraLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPInformacionPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLNombrePalabra)
                    .addComponent(jTFNombrePalabra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPInformacionPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLTraduccion)
                    .addComponent(jTFTraduccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPInformacionPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLSignificadoOrigen)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPInformacionPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLSignificadoDestino)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPTipoTraduccionReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBAgregarPalabra))
        );

        jPDiccionarioAgregar.setBackground(new java.awt.Color(51, 153, 255));
        jPDiccionarioAgregar.setBorder(javax.swing.BorderFactory.createTitledBorder("Diccionario a agregar"));

        jLDiccionarioPalabra.setText("Diccionario:");

        javax.swing.GroupLayout jPDiccionarioAgregarLayout = new javax.swing.GroupLayout(jPDiccionarioAgregar);
        jPDiccionarioAgregar.setLayout(jPDiccionarioAgregarLayout);
        jPDiccionarioAgregarLayout.setHorizontalGroup(
            jPDiccionarioAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDiccionarioAgregarLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLDiccionarioPalabra)
                .addGap(18, 18, 18)
                .addComponent(jCBDiccionario, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPDiccionarioAgregarLayout.setVerticalGroup(
            jPDiccionarioAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDiccionarioAgregarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPDiccionarioAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLDiccionarioPalabra)
                    .addComponent(jCBDiccionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPAgregarPalabraLayout = new javax.swing.GroupLayout(jPAgregarPalabra);
        jPAgregarPalabra.setLayout(jPAgregarPalabraLayout);
        jPAgregarPalabraLayout.setHorizontalGroup(
            jPAgregarPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPAgregarPalabraLayout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addGroup(jPAgregarPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPInformacionPalabra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPDiccionarioAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79))
        );
        jPAgregarPalabraLayout.setVerticalGroup(
            jPAgregarPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPAgregarPalabraLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPDiccionarioAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPInformacionPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        jTBPrincipal.addTab("Agregar palabra", jPAgregarPalabra);

        jPVerPalabras.setBackground(new java.awt.Color(51, 204, 255));

        jPVerDatos.setBackground(new java.awt.Color(51, 153, 255));
        jPVerDatos.setBorder(javax.swing.BorderFactory.createTitledBorder("Visualizacion"));

        listaDiccionario.setBackground(new java.awt.Color(51, 102, 255));
        listaDiccionario.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaDiccionarioValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listaDiccionario);

        jLTraduccionVer.setText("Traduccion:");

        jLSignificadoVer.setText("Significado:");

        jTASignificadoVer.setColumns(20);
        jTASignificadoVer.setRows(5);
        jScrollPane4.setViewportView(jTASignificadoVer);

        jLAutorVer.setText("Autor:");

        jBQuitarFiltro.setBackground(new java.awt.Color(255, 255, 255));
        jBQuitarFiltro.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        jBQuitarFiltro.setForeground(new java.awt.Color(51, 153, 255));
        jBQuitarFiltro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/imagenes/quitarFiltro.png"))); // NOI18N
        jBQuitarFiltro.setText("QUITAR FILTRO");
        jBQuitarFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBQuitarFiltroActionPerformed(evt);
            }
        });

        jBAplicarFiltro.setBackground(new java.awt.Color(255, 255, 255));
        jBAplicarFiltro.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        jBAplicarFiltro.setForeground(new java.awt.Color(51, 153, 255));
        jBAplicarFiltro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/imagenes/aplicarFiltro.png"))); // NOI18N
        jBAplicarFiltro.setText("APLICAR FILTRO");
        jBAplicarFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAplicarFiltroActionPerformed(evt);
            }
        });

        jLInstruccionFiltro.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        jLInstruccionFiltro.setText("Filtrar palabras por letra inicial o subcadena:");

        jLFiltro.setText("Filtro:");

        jListTraduAlternas.setBorder(javax.swing.BorderFactory.createTitledBorder("Traducciones alternas"));
        jScrollPane5.setViewportView(jListTraduAlternas);

        javax.swing.GroupLayout jPVerDatosLayout = new javax.swing.GroupLayout(jPVerDatos);
        jPVerDatos.setLayout(jPVerDatosLayout);
        jPVerDatosLayout.setHorizontalGroup(
            jPVerDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPVerDatosLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPVerDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPVerDatosLayout.createSequentialGroup()
                        .addComponent(jLTraduccionVer)
                        .addGap(18, 18, 18)
                        .addComponent(jTFTraduccionVer, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPVerDatosLayout.createSequentialGroup()
                        .addGroup(jPVerDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLSignificadoVer)
                            .addGroup(jPVerDatosLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLAutorVer)))
                        .addGap(19, 19, 19)
                        .addGroup(jPVerDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFAutorVer, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPVerDatosLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
            .addGroup(jPVerDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPVerDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLInstruccionFiltro)
                    .addGroup(jPVerDatosLayout.createSequentialGroup()
                        .addComponent(jLFiltro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTFFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jBAplicarFiltro)))
                .addGap(9, 9, 9)
                .addComponent(jBQuitarFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPVerDatosLayout.setVerticalGroup(
            jPVerDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPVerDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPVerDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPVerDatosLayout.createSequentialGroup()
                        .addGroup(jPVerDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLTraduccionVer)
                            .addComponent(jTFTraduccionVer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPVerDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLSignificadoVer)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPVerDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFAutorVer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLAutorVer)))
                    .addComponent(jScrollPane3))
                .addGap(18, 18, 18)
                .addComponent(jLInstruccionFiltro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPVerDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAplicarFiltro)
                    .addComponent(jLFiltro)
                    .addComponent(jTFFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBQuitarFiltro))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPDiccionarioVer.setBackground(new java.awt.Color(51, 153, 255));
        jPDiccionarioVer.setBorder(javax.swing.BorderFactory.createTitledBorder("Diccionario a agregar"));

        jLDiccionarioPalabraVer.setText("Diccionario:");

        jBValidarDiccionarioVer.setBackground(new java.awt.Color(255, 255, 255));
        jBValidarDiccionarioVer.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        jBValidarDiccionarioVer.setForeground(new java.awt.Color(51, 153, 255));
        jBValidarDiccionarioVer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/imagenes/validar.png"))); // NOI18N
        jBValidarDiccionarioVer.setText("VALIDAR");
        jBValidarDiccionarioVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBValidarDiccionarioVerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPDiccionarioVerLayout = new javax.swing.GroupLayout(jPDiccionarioVer);
        jPDiccionarioVer.setLayout(jPDiccionarioVerLayout);
        jPDiccionarioVerLayout.setHorizontalGroup(
            jPDiccionarioVerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDiccionarioVerLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLDiccionarioPalabraVer)
                .addGap(18, 18, 18)
                .addComponent(jCBDiccionarioVer, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBValidarDiccionarioVer)
                .addGap(46, 46, 46))
        );
        jPDiccionarioVerLayout.setVerticalGroup(
            jPDiccionarioVerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDiccionarioVerLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPDiccionarioVerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLDiccionarioPalabraVer)
                    .addComponent(jCBDiccionarioVer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBValidarDiccionarioVer))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPVerPalabrasLayout = new javax.swing.GroupLayout(jPVerPalabras);
        jPVerPalabras.setLayout(jPVerPalabrasLayout);
        jPVerPalabrasLayout.setHorizontalGroup(
            jPVerPalabrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPVerPalabrasLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPVerPalabrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPVerDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPDiccionarioVer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPVerPalabrasLayout.setVerticalGroup(
            jPVerPalabrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPVerPalabrasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPDiccionarioVer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPVerDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        jTBPrincipal.addTab("Ver palabras de diccionario", jPVerPalabras);

        jPModificarPalabra.setBackground(new java.awt.Color(51, 204, 255));

        jPDiccionarioModificar.setBackground(new java.awt.Color(51, 153, 255));
        jPDiccionarioModificar.setBorder(javax.swing.BorderFactory.createTitledBorder("Diccionario de palabra a modificar"));

        jLDiccionarioPalabraModificar.setText("Diccionario:");

        jBValidarModificacion.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        jBValidarModificacion.setForeground(new java.awt.Color(51, 153, 255));
        jBValidarModificacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/imagenes/validar.png"))); // NOI18N
        jBValidarModificacion.setText("VALIDAR");
        jBValidarModificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBValidarModificacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPDiccionarioModificarLayout = new javax.swing.GroupLayout(jPDiccionarioModificar);
        jPDiccionarioModificar.setLayout(jPDiccionarioModificarLayout);
        jPDiccionarioModificarLayout.setHorizontalGroup(
            jPDiccionarioModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDiccionarioModificarLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLDiccionarioPalabraModificar)
                .addGap(18, 18, 18)
                .addComponent(jCBDiccionarioModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBValidarModificacion)
                .addGap(34, 34, 34))
        );
        jPDiccionarioModificarLayout.setVerticalGroup(
            jPDiccionarioModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDiccionarioModificarLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPDiccionarioModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLDiccionarioPalabraModificar)
                    .addComponent(jCBDiccionarioModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBValidarModificacion))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPDatosModificar.setBackground(new java.awt.Color(51, 153, 255));
        jPDatosModificar.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jListPalabrasModificar.setBackground(new java.awt.Color(51, 102, 255));
        jListPalabrasModificar.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de palabras"));
        jListPalabrasModificar.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListPalabrasModificarValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(jListPalabrasModificar);

        jLTraduccionModificar.setText("Traduccion:");

        jTASignificadoOrigenModificar.setColumns(20);
        jTASignificadoOrigenModificar.setRows(5);
        jScrollPane8.setViewportView(jTASignificadoOrigenModificar);

        jLSignificadoOrigenModificar.setText("Significado origen:");

        jTASignificadoDestinoModificar.setColumns(20);
        jTASignificadoDestinoModificar.setRows(5);
        jScrollPane9.setViewportView(jTASignificadoDestinoModificar);

        jLSignificadoDestinoModificar.setText("Significado destino:");

        jBModificarPalabra.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        jBModificarPalabra.setForeground(new java.awt.Color(51, 153, 255));
        jBModificarPalabra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/imagenes/modificar.png"))); // NOI18N
        jBModificarPalabra.setText("MODIFICAR PALABRA");
        jBModificarPalabra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBModificarPalabraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPDatosModificarLayout = new javax.swing.GroupLayout(jPDatosModificar);
        jPDatosModificar.setLayout(jPDatosModificarLayout);
        jPDatosModificarLayout.setHorizontalGroup(
            jPDatosModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDatosModificarLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPDatosModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDatosModificarLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPDatosModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPDatosModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPDatosModificarLayout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(jLSignificadoDestinoModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18))
                                .addGroup(jPDatosModificarLayout.createSequentialGroup()
                                    .addComponent(jLSignificadoOrigenModificar)
                                    .addGap(27, 27, 27)))
                            .addGroup(jPDatosModificarLayout.createSequentialGroup()
                                .addComponent(jLTraduccionModificar)
                                .addGap(59, 59, 59)))
                        .addGroup(jPDatosModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTFTraduccionModificar)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                            .addComponent(jScrollPane9))
                        .addContainerGap())
                    .addGroup(jPDatosModificarLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jBModificarPalabra)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPDatosModificarLayout.setVerticalGroup(
            jPDatosModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDatosModificarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPDatosModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDatosModificarLayout.createSequentialGroup()
                        .addGroup(jPDatosModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLTraduccionModificar)
                            .addComponent(jTFTraduccionModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPDatosModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLSignificadoOrigenModificar)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPDatosModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLSignificadoDestinoModificar)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBModificarPalabra))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPTipoTraduccion.setBackground(new java.awt.Color(51, 153, 255));
        jPTipoTraduccion.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de traduccion"));

        jRBTraduccionAlterna.setBackground(new java.awt.Color(51, 153, 255));
        TipoTraduccion.add(jRBTraduccionAlterna);
        jRBTraduccionAlterna.setText("Traduccion alterna");

        jRBTraduccionPrincipal.setBackground(new java.awt.Color(51, 153, 255));
        TipoTraduccion.add(jRBTraduccionPrincipal);
        jRBTraduccionPrincipal.setText("Traduccion principal");

        javax.swing.GroupLayout jPTipoTraduccionLayout = new javax.swing.GroupLayout(jPTipoTraduccion);
        jPTipoTraduccion.setLayout(jPTipoTraduccionLayout);
        jPTipoTraduccionLayout.setHorizontalGroup(
            jPTipoTraduccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPTipoTraduccionLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jRBTraduccionPrincipal)
                .addGap(69, 69, 69)
                .addComponent(jRBTraduccionAlterna)
                .addContainerGap(123, Short.MAX_VALUE))
        );
        jPTipoTraduccionLayout.setVerticalGroup(
            jPTipoTraduccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPTipoTraduccionLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPTipoTraduccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBTraduccionAlterna)
                    .addComponent(jRBTraduccionPrincipal))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPModificarPalabraLayout = new javax.swing.GroupLayout(jPModificarPalabra);
        jPModificarPalabra.setLayout(jPModificarPalabraLayout);
        jPModificarPalabraLayout.setHorizontalGroup(
            jPModificarPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPModificarPalabraLayout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addGroup(jPModificarPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPDatosModificar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPDiccionarioModificar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPTipoTraduccion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );
        jPModificarPalabraLayout.setVerticalGroup(
            jPModificarPalabraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPModificarPalabraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPDiccionarioModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPTipoTraduccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPDatosModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        jTBPrincipal.addTab("Modificar palabra", jPModificarPalabra);

        jPOtrasOpciones.setBackground(new java.awt.Color(51, 204, 255));

        jListPalabrasRecientes.setBackground(new java.awt.Color(51, 153, 255));
        jListPalabrasRecientes.setBorder(javax.swing.BorderFactory.createTitledBorder("Palabras recientes"));
        jScrollPane6.setViewportView(jListPalabrasRecientes);

        jPArchivosDeTexto.setBackground(new java.awt.Color(51, 153, 255));
        jPArchivosDeTexto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Generar palabras en TXT", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        jPGenerarDiccionarios.setBackground(new java.awt.Color(51, 102, 255));
        jPGenerarDiccionarios.setBorder(javax.swing.BorderFactory.createTitledBorder("Generar todos los diccionarios"));

        jBGenerarPorDiccionario.setBackground(new java.awt.Color(255, 255, 255));
        jBGenerarPorDiccionario.setFont(new java.awt.Font("Gill Sans MT Condensed", 1, 18)); // NOI18N
        jBGenerarPorDiccionario.setForeground(new java.awt.Color(51, 102, 255));
        jBGenerarPorDiccionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/imagenes/archivos.png"))); // NOI18N
        jBGenerarPorDiccionario.setText("GENERAR ARCHIVO");
        jBGenerarPorDiccionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGenerarPorDiccionarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPGenerarDiccionariosLayout = new javax.swing.GroupLayout(jPGenerarDiccionarios);
        jPGenerarDiccionarios.setLayout(jPGenerarDiccionariosLayout);
        jPGenerarDiccionariosLayout.setHorizontalGroup(
            jPGenerarDiccionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPGenerarDiccionariosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBGenerarPorDiccionario)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPGenerarDiccionariosLayout.setVerticalGroup(
            jPGenerarDiccionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPGenerarDiccionariosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBGenerarPorDiccionario)
                .addContainerGap())
        );

        jPGenerarAutor.setBackground(new java.awt.Color(51, 102, 255));
        jPGenerarAutor.setBorder(javax.swing.BorderFactory.createTitledBorder("Generar por autor determinado"));

        jBGenerarPorAutor.setBackground(new java.awt.Color(255, 255, 255));
        jBGenerarPorAutor.setFont(new java.awt.Font("Gill Sans MT Condensed", 1, 18)); // NOI18N
        jBGenerarPorAutor.setForeground(new java.awt.Color(51, 102, 255));
        jBGenerarPorAutor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/imagenes/archivos.png"))); // NOI18N
        jBGenerarPorAutor.setText("GENERAR ARCHIVO");
        jBGenerarPorAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGenerarPorAutorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPGenerarAutorLayout = new javax.swing.GroupLayout(jPGenerarAutor);
        jPGenerarAutor.setLayout(jPGenerarAutorLayout);
        jPGenerarAutorLayout.setHorizontalGroup(
            jPGenerarAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPGenerarAutorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBGenerarPorAutor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPGenerarAutorLayout.setVerticalGroup(
            jPGenerarAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPGenerarAutorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBGenerarPorAutor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPGenerarInicial.setBackground(new java.awt.Color(51, 102, 255));
        jPGenerarInicial.setBorder(javax.swing.BorderFactory.createTitledBorder("Generar por palabras que empiezen por letra determinada"));

        jBGenerarPorInicial.setBackground(new java.awt.Color(255, 255, 255));
        jBGenerarPorInicial.setFont(new java.awt.Font("Gill Sans MT Condensed", 1, 18)); // NOI18N
        jBGenerarPorInicial.setForeground(new java.awt.Color(51, 102, 255));
        jBGenerarPorInicial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/imagenes/archivos.png"))); // NOI18N
        jBGenerarPorInicial.setText("GENERAR ARCHIVO");
        jBGenerarPorInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGenerarPorInicialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPGenerarInicialLayout = new javax.swing.GroupLayout(jPGenerarInicial);
        jPGenerarInicial.setLayout(jPGenerarInicialLayout);
        jPGenerarInicialLayout.setHorizontalGroup(
            jPGenerarInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPGenerarInicialLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jBGenerarPorInicial)
                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPGenerarInicialLayout.setVerticalGroup(
            jPGenerarInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPGenerarInicialLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBGenerarPorInicial))
        );

        javax.swing.GroupLayout jPArchivosDeTextoLayout = new javax.swing.GroupLayout(jPArchivosDeTexto);
        jPArchivosDeTexto.setLayout(jPArchivosDeTextoLayout);
        jPArchivosDeTextoLayout.setHorizontalGroup(
            jPArchivosDeTextoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPArchivosDeTextoLayout.createSequentialGroup()
                .addGroup(jPArchivosDeTextoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPArchivosDeTextoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPGenerarDiccionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPGenerarAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPArchivosDeTextoLayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jPGenerarInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPArchivosDeTextoLayout.setVerticalGroup(
            jPArchivosDeTextoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPArchivosDeTextoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPArchivosDeTextoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPGenerarDiccionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPGenerarAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPGenerarInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );

        javax.swing.GroupLayout jPOtrasOpcionesLayout = new javax.swing.GroupLayout(jPOtrasOpciones);
        jPOtrasOpciones.setLayout(jPOtrasOpcionesLayout);
        jPOtrasOpcionesLayout.setHorizontalGroup(
            jPOtrasOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPOtrasOpcionesLayout.createSequentialGroup()
                .addGroup(jPOtrasOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPOtrasOpcionesLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jPArchivosDeTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPOtrasOpcionesLayout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPOtrasOpcionesLayout.setVerticalGroup(
            jPOtrasOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPOtrasOpcionesLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPArchivosDeTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );

        jTBPrincipal.addTab("Otras opciones", jPOtrasOpciones);

        jLEncabezado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/imagenes/encabezado.jpg"))); // NOI18N

        jLTitulo.setFont(new java.awt.Font("Gill Sans MT Condensed", 1, 36)); // NOI18N
        jLTitulo.setForeground(new java.awt.Color(153, 0, 0));
        jLTitulo.setText("TRADUCTOR CIVA");

        jLEslogan.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        jLEslogan.setText("La mejor traduccion para tu necesidad...");

        jBCerrarSesion.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        jBCerrarSesion.setForeground(new java.awt.Color(51, 153, 255));
        jBCerrarSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/imagenes/logout.png"))); // NOI18N
        jBCerrarSesion.setText("CERRAR SESION");
        jBCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCerrarSesionActionPerformed(evt);
            }
        });

        jLInfoConexion.setBackground(new java.awt.Color(255, 255, 255));
        jLInfoConexion.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        jLInfoConexion.setForeground(new java.awt.Color(51, 153, 255));
        jLInfoConexion.setText("Usuario Conectado:");

        jLUsuarioConectado.setBackground(new java.awt.Color(255, 255, 255));
        jLUsuarioConectado.setFont(new java.awt.Font("Gill Sans MT Condensed", 0, 18)); // NOI18N
        jLUsuarioConectado.setForeground(new java.awt.Color(51, 153, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLEncabezado)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLTitulo)
                        .addGap(46, 46, 46))
                    .addComponent(jLEslogan, javax.swing.GroupLayout.Alignment.TRAILING)))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTBPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLInfoConexion)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBCerrarSesion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                            .addComponent(jLUsuarioConectado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLEslogan))
                    .addComponent(jLEncabezado, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLInfoConexion)
                        .addGap(11, 11, 11)
                        .addComponent(jLUsuarioConectado, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBCerrarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTBPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAgregarPalabraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarPalabraActionPerformed
        // TODO add your handling code here:
        String palabra = jTFNombrePalabra.getText();
        String traduccion = jTFTraduccion.getText();
        String significadoOrigen = jTASignificadoOrigen.getText();
        String significadoDestino = jTASignificadoDestino.getText();
        if (jCBDiccionario.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar el diccionario");

        } else if (palabra.isEmpty() || traduccion.isEmpty() || significadoOrigen.isEmpty() || significadoDestino.isEmpty()) {

            JOptionPane.showMessageDialog(null, "Debe completar todos los campos");
        } else {
            String diccionario[] = ((String) jCBDiccionario.getSelectedItem()).split(" - ");
            String origen = diccionario[0];
            String destino = diccionario[1];
            Diccionario dic = traductor.buscarDiccionario(origen, destino);
            Palabra p = new Palabra(palabra.toUpperCase(), usuarioLogeado.getNombreUsuario());
            p.agregarTraduccion(traduccion);
            if (jRBTraduAlternaReg.isSelected()) {
                p.agregarTraduccionAlterna(jTFTraduAlternaReg.getText());
            }
            p.agregarSignificadoOrigen(significadoOrigen);
            p.agregarSignificadoDestino(significadoDestino);
            dic.agregarPalabra(p);
            traductor.agregarReciente(p);
            ArrayList<String> lista = traductor.listarRecientes(origen + " - " + destino);
            String[] array = lista.toArray(new String[lista.size()]);
            jListPalabrasRecientes.setListData(array);
            JOptionPane.showMessageDialog(null, "Se ha agregado la palabra al diccionario");
            limpiarCamposPalabra();
        }
    }//GEN-LAST:event_jBAgregarPalabraActionPerformed

    //Limpia los campos del formulario de registro de una palabra
    public void limpiarCamposPalabra() {
        jCBDiccionario.setSelectedIndex(0);
        jTFNombrePalabra.setText(null);
        jTFTraduccion.setText(null);
        jTASignificadoOrigen.setText(null);
        jTASignificadoDestino.setText(null);
        jTFTraduAlternaReg.setText(null);
        TipoTraduccionReg.clearSelection();

    }
    private void jBCrearDiccionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCrearDiccionarioActionPerformed
        // TODO add your handling code here:
        String idiomaOrigen = jTFIdiomaOrigenDiccionario.getText();
        String idiomaDestino = jTFIdiomaDestinoDiccionario.getText();
        if (idiomaOrigen.isEmpty() || idiomaDestino.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe completar todos los campos");
        } else {
            Diccionario diccionario = new Diccionario(idiomaOrigen, idiomaDestino);
            boolean msj = traductor.crearDiccionario(diccionario);
            if (msj == true) {
                JOptionPane.showMessageDialog(null, "Se creo el diccionario");
                limpiarCamposDiccionario();
            } else {
                JOptionPane.showMessageDialog(null, "Este diccionario ya existe");
            }
        }
    }//GEN-LAST:event_jBCrearDiccionarioActionPerformed
    //Limpia los campos del formulario de registro de un diccionario

    public void limpiarCamposDiccionario() {
        jTFIdiomaOrigenDiccionario.setText(null);
        jTFIdiomaDestinoDiccionario.setText(null);
    }
    private void jTBPrincipalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTBPrincipalStateChanged
        if (jTBPrincipal.getSelectedIndex() == 0 || jTBPrincipal.getSelectedIndex() == 1 || jTBPrincipal.getSelectedIndex() == 2
                || jTBPrincipal.getSelectedIndex() == 3 || jTBPrincipal.getSelectedIndex() == 4) {
            cargarCombo();
            limpiarCamposModificar();
            String limpio[] = new String[0];
            jListPalabrasModificar.setListData(limpio);
        }
    }//GEN-LAST:event_jTBPrincipalStateChanged

    private void jBValidarDiccionarioVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBValidarDiccionarioVerActionPerformed
        // TODO add your handling code here:
        if (jCBDiccionarioVer.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar el diccionario");
        } else {
            String diccionario[] = ((String) jCBDiccionarioVer.getSelectedItem()).split(" - ");
            String origen = diccionario[0];
            String destino = diccionario[1];
            Diccionario dic = traductor.buscarDiccionario(origen, destino);
            ArrayList<String> lista = dic.listarPalabras();
            listaDiccionario.setListData(lista.toArray());
        }
    }//GEN-LAST:event_jBValidarDiccionarioVerActionPerformed

    private void listaDiccionarioValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaDiccionarioValueChanged
        // TODO add your handling code here:
        if (listaDiccionario.getSelectedValue() != null) {

            String nombre = (String) listaDiccionario.getSelectedValue();
            String diccionario[] = ((String) jCBDiccionarioVer.getSelectedItem()).split(" - ");
            String origen = diccionario[0];
            String destino = diccionario[1];
            Diccionario dic = traductor.buscarDiccionario(origen, destino);
            Palabra pal = dic.buscarPalabra(nombre);
            jTFTraduccionVer.setText(pal.getTraduccion().recuperar());
            jTASignificadoVer.setText(pal.getSignificadoOrigen().recuperar());
            ArrayList<String> lista = pal.traduccionAlterna();
            String[] array = lista.toArray(new String[lista.size()]);
            jListTraduAlternas.setListData(array);
            jTFAutorVer.setText(pal.getAutor());

        }
    }//GEN-LAST:event_listaDiccionarioValueChanged

    private void jBAplicarFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAplicarFiltroActionPerformed
        // TODO add your handling code here:
        String filtro = jTFFiltro.getText();
        String diccionario[] = ((String) jCBDiccionarioVer.getSelectedItem()).split(" - ");
        String origen = diccionario[0];
        String destino = diccionario[1];
        Diccionario dic = traductor.buscarDiccionario(origen, destino);
        if (filtro.length() > 1) {
            ArrayList<String> lista = dic.listarPalabrasFiltroInicial(filtro.toUpperCase());
            listaDiccionario.setListData(lista.toArray());
        } else {
            ArrayList<String> lista = dic.listarPalabrasFiltroSubCadena(filtro.toUpperCase());
            listaDiccionario.setListData(lista.toArray());
        }


    }//GEN-LAST:event_jBAplicarFiltroActionPerformed

    private void jBQuitarFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBQuitarFiltroActionPerformed
        // TODO add your handling code here:
        String diccionario[] = ((String) jCBDiccionarioVer.getSelectedItem()).split(" - ");
        String origen = diccionario[0];
        String destino = diccionario[1];
        Diccionario dic = traductor.buscarDiccionario(origen, destino);
        ArrayList<String> lista = dic.listarPalabras();
        listaDiccionario.setListData(lista.toArray());

    }//GEN-LAST:event_jBQuitarFiltroActionPerformed

    private void jBValidarModificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBValidarModificacionActionPerformed
        // TODO add your handling code here:
        if (jCBDiccionarioModificar.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar el diccionario");
        } else {
            String diccionario[] = ((String) jCBDiccionarioModificar.getSelectedItem()).split(" - ");
            String origen = diccionario[0];
            String destino = diccionario[1];
            Diccionario dic = traductor.buscarDiccionario(origen, destino);
            ArrayList<String> lista = dic.listarPalabras();
            String[] array = lista.toArray(new String[lista.size()]);
            jListPalabrasModificar.setListData(array);
        }
    }//GEN-LAST:event_jBValidarModificacionActionPerformed

    private void jListPalabrasModificarValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListPalabrasModificarValueChanged
        // TODO add your handling code here:
        if (jListPalabrasModificar.getSelectedValue() != null) {

            String nombre = (String) jListPalabrasModificar.getSelectedValue();
            String diccionario[] = ((String) jCBDiccionarioModificar.getSelectedItem()).split(" - ");
            String origen = diccionario[0];
            String destino = diccionario[1];
            Diccionario dic = traductor.buscarDiccionario(origen, destino);
            Palabra pal = dic.buscarPalabra(nombre);
            jTFTraduccionModificar.setText(pal.getTraduccion().recuperar());
            jTASignificadoDestinoModificar.setText(pal.getSignificadoDestino().recuperar());
            jTASignificadoOrigenModificar.setText(pal.getSignificadoOrigen().recuperar());
        }
    }//GEN-LAST:event_jListPalabrasModificarValueChanged

    private void jBModificarPalabraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBModificarPalabraActionPerformed
        // TODO add your handling code here:
        if (jListPalabrasModificar.getSelectedValue() != null) {
            if (jCBDiccionarioModificar.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar el diccionario");
            } else {
                String nombre = (String) jListPalabrasModificar.getSelectedValue();
                String diccionario[] = ((String) jCBDiccionarioModificar.getSelectedItem()).split(" - ");
                String origen = diccionario[0];
                String destino = diccionario[1];
                Diccionario dic = traductor.buscarDiccionario(origen, destino);
                Palabra pal = dic.buscarPalabra(nombre);
                if (jRBTraduccionAlterna.isSelected()) {
                    pal.agregarTraduccionAlterna(jTFTraduccionModificar.getText());
                } else {
                    pal.agregarTraduccion(jTFTraduccionModificar.getText());
                }
                pal.agregarSignificadoDestino(jTASignificadoDestinoModificar.getText());
                pal.agregarSignificadoOrigen(jTASignificadoOrigenModificar.getText());
                pal.setAutor(usuarioLogeado.getNombreUsuario());
                JOptionPane.showMessageDialog(null, "Se modifico la palabra correctamente");
                limpiarCamposModificar();
            }
        }

    }//GEN-LAST:event_jBModificarPalabraActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        traductor.serializarDiccionarios();
        JOptionPane.showMessageDialog(null, "Se ha cerrado sesion automaticamente");
    }//GEN-LAST:event_formWindowClosing

    private void jBGenerarPorInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGenerarPorInicialActionPerformed
        String inicial = JOptionPane.showInputDialog(null, "Ingrese la letra por la cual va a construir el archivo");
        // Se crea el objeto FileChooser
        JFileChooser selector = new JFileChooser();
        int opcion = selector.showSaveDialog(null);
        //APROVE_OPTION es una constante que tiene un valor igual al que retorna showSaveDialog
        if (opcion == JFileChooser.APPROVE_OPTION) {
            try {
                traductor.generarArchivoPorInicial(selector.getSelectedFile(), inicial.toUpperCase());
                JOptionPane.showMessageDialog(null, "Archivo generado");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Se ha producido un error que"
                        + " impide generar el archivo");
            }
        }

    }//GEN-LAST:event_jBGenerarPorInicialActionPerformed

    private void jBGenerarPorAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGenerarPorAutorActionPerformed
        // TODO add your handling code here:
        String autor = JOptionPane.showInputDialog(null, "Ingrese el autor por la cual va a construir el archivo");
        // Se crea el objeto FileChooser
        JFileChooser selector = new JFileChooser();
        int opcion = selector.showSaveDialog(null);
        //APROVE_OPTION es una constante que tiene un valor igual al que retorna showSaveDialog
        if (opcion == JFileChooser.APPROVE_OPTION) {
            try {
                traductor.generarArchivoPorAutor(selector.getSelectedFile(), autor);
                JOptionPane.showMessageDialog(null, "Archivo generado");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Se ha producido un error que"
                        + " impide generar el archivo");
            }
        }
    }//GEN-LAST:event_jBGenerarPorAutorActionPerformed

    private void jBCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCerrarSesionActionPerformed
        dispose();
        traductor.serializarDiccionarios();
    }//GEN-LAST:event_jBCerrarSesionActionPerformed

    private void jBGenerarPorDiccionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGenerarPorDiccionarioActionPerformed
        // TODO add your handling code here:
        JFileChooser selector = new JFileChooser();
        int opcion = selector.showSaveDialog(null);
        //APROVE_OPTION es una constante que tiene un valor igual al que retorna showSaveDialog
        if (opcion == JFileChooser.APPROVE_OPTION) {
            try {
                traductor.generarArchivoPorDiccionario(selector.getSelectedFile());
                JOptionPane.showMessageDialog(null, "Archivo generado");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Se ha producido un error que"
                        + " impide generar el archivo");
            }
        }
    }//GEN-LAST:event_jBGenerarPorDiccionarioActionPerformed

    /**
     * Limpia los campos de la pestaña modificar palabra
     */
    public void limpiarCamposModificar() {
        jTFTraduccionModificar.setText(null);
        jTASignificadoDestinoModificar.setText(null);
        jTASignificadoOrigenModificar.setText(null);
        TipoTraduccion.clearSelection();
    }

    /**
     * Carga los combos con los diccionarios que tiene el traductor
     */
    public void cargarCombo() {
        ArrayList<String> diccionarios = traductor.listarDiccionarios();
        jCBDiccionarioVer.removeAllItems();
        jCBDiccionario.removeAllItems();
        jCBDiccionarioModificar.removeAllItems();
        jCBDiccionarioVer.addItem("Seleccione el diccionario");
        jCBDiccionario.addItem("Seleccione el diccionario");
        jCBDiccionarioModificar.addItem("Seleccione el diccionario");
        for (int i = 0; i < diccionarios.size(); i++) {
            jCBDiccionario.addItem(diccionarios.get(i));
            jCBDiccionarioVer.addItem(diccionarios.get(i));
            jCBDiccionarioModificar.addItem(diccionarios.get(i));
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup TipoTraduccion;
    private javax.swing.ButtonGroup TipoTraduccionReg;
    private javax.swing.JButton jBAgregarPalabra;
    private javax.swing.JButton jBAplicarFiltro;
    private javax.swing.JButton jBCerrarSesion;
    private javax.swing.JButton jBCrearDiccionario;
    private javax.swing.JButton jBGenerarPorAutor;
    private javax.swing.JButton jBGenerarPorDiccionario;
    private javax.swing.JButton jBGenerarPorInicial;
    private javax.swing.JButton jBModificarPalabra;
    private javax.swing.JButton jBQuitarFiltro;
    private javax.swing.JButton jBValidarDiccionarioVer;
    private javax.swing.JButton jBValidarModificacion;
    private javax.swing.JComboBox<String> jCBDiccionario;
    private javax.swing.JComboBox<String> jCBDiccionarioModificar;
    private javax.swing.JComboBox<String> jCBDiccionarioVer;
    private javax.swing.JLabel jLAutorVer;
    private javax.swing.JLabel jLDiccionarioPalabra;
    private javax.swing.JLabel jLDiccionarioPalabraModificar;
    private javax.swing.JLabel jLDiccionarioPalabraVer;
    private javax.swing.JLabel jLEncabezado;
    private javax.swing.JLabel jLEslogan;
    private javax.swing.JLabel jLFiltro;
    private javax.swing.JLabel jLIdiomaDestinoDiccionario;
    private javax.swing.JLabel jLIdiomaOrigenDiccionario;
    private javax.swing.JLabel jLInfoConexion;
    private javax.swing.JLabel jLInstruccionFiltro;
    private javax.swing.JLabel jLNombrePalabra;
    private javax.swing.JLabel jLSignificadoDestino;
    private javax.swing.JLabel jLSignificadoDestinoModificar;
    private javax.swing.JLabel jLSignificadoOrigen;
    private javax.swing.JLabel jLSignificadoOrigenModificar;
    private javax.swing.JLabel jLSignificadoVer;
    private javax.swing.JLabel jLTitulo;
    private javax.swing.JLabel jLTraduAlternaRegistrar;
    private javax.swing.JLabel jLTraduccion;
    private javax.swing.JLabel jLTraduccionModificar;
    private javax.swing.JLabel jLTraduccionVer;
    private javax.swing.JLabel jLUsuarioConectado;
    private javax.swing.JList<String> jListPalabrasModificar;
    private javax.swing.JList<String> jListPalabrasRecientes;
    private javax.swing.JList<String> jListTraduAlternas;
    private javax.swing.JPanel jPAgregarDiccionario;
    private javax.swing.JPanel jPAgregarPalabra;
    private javax.swing.JPanel jPArchivosDeTexto;
    private javax.swing.JPanel jPDatosDiccionario;
    private javax.swing.JPanel jPDatosModificar;
    private javax.swing.JPanel jPDiccionarioAgregar;
    private javax.swing.JPanel jPDiccionarioModificar;
    private javax.swing.JPanel jPDiccionarioVer;
    private javax.swing.JPanel jPGenerarAutor;
    private javax.swing.JPanel jPGenerarDiccionarios;
    private javax.swing.JPanel jPGenerarInicial;
    private javax.swing.JPanel jPInformacionPalabra;
    private javax.swing.JPanel jPModificarPalabra;
    private javax.swing.JPanel jPOtrasOpciones;
    private javax.swing.JPanel jPTipoTraduccion;
    private javax.swing.JPanel jPTipoTraduccionReg;
    private javax.swing.JPanel jPVerDatos;
    private javax.swing.JPanel jPVerPalabras;
    private javax.swing.JRadioButton jRBTraduAlternaReg;
    private javax.swing.JRadioButton jRBTraduccionAlterna;
    private javax.swing.JRadioButton jRBTraduccionPrincipal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea jTASignificadoDestino;
    private javax.swing.JTextArea jTASignificadoDestinoModificar;
    private javax.swing.JTextArea jTASignificadoOrigen;
    private javax.swing.JTextArea jTASignificadoOrigenModificar;
    private javax.swing.JTextArea jTASignificadoVer;
    private javax.swing.JTabbedPane jTBPrincipal;
    private javax.swing.JTextField jTFAutorVer;
    private javax.swing.JTextField jTFFiltro;
    private javax.swing.JTextField jTFIdiomaDestinoDiccionario;
    private javax.swing.JTextField jTFIdiomaOrigenDiccionario;
    private javax.swing.JTextField jTFNombrePalabra;
    private javax.swing.JTextField jTFTraduAlternaReg;
    private javax.swing.JTextField jTFTraduccion;
    private javax.swing.JTextField jTFTraduccionModificar;
    private javax.swing.JTextField jTFTraduccionVer;
    private javax.swing.JList listaDiccionario;
    // End of variables declaration//GEN-END:variables
}
